//boj15988번_1,2,3 더하기 3_dp

#include<iostream>

using namespace std;

long long dp[1000001];

int main() {
	int T;
	cin >> T;

	for (int t = 0; t < T; t++) {
		for (int i = 0; i < 10001; i++) {
			dp[i] = 0;
		}

		int N;
		cin >> N;

		dp[0] = 1;
		dp[1] = 2;
		dp[2] = 4;
		dp[3] = 7;

		for (int i = 4; i < N; i++) {
			dp[i] = (dp[i - 1] + dp[i - 2] + dp[i - 3]) % 1000000009;
		}

		cout << dp[N - 1] % 1000000009 << '\n';
	}
}
//dp문제.
//1을 만들 때 경우의 수 1 (1개), 2를 만들 때 경우의 수 1+1, 2 (2개),3을 만들 때 경우의 수 1+1+1, 1+2, 2+1, 3 (4개) 이런식으로 생각해보면
//4를 만들 때 경우의 수 1+1+1+1, 2+1+1, 1+2+1, 1+1+2, 2+2, 3+1, 1+3(7개) 이를 통해 알 수 있는 것은
//dp[3] = dp[2] + dp[1] + dp[0]이다. 이것을 점화식으로 표현하면 dp[N] = dp[N - 1] + dp[N - 2] + dp[N - 3]이 된다.